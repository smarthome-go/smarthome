import { LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';
import { styleTags, tags } from '@lezer/highlight';
import { LRParser } from '@lezer/lr';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_Ident = {__proto__:null,let:10, true:16, false:16, on:16, off:16, null:40, exit:46, throw:46, assert:46, print:46, println:46, ping:46, switch_on:46, switch:46, notify:46, log:46, exec:46, get:46, http:46, user:50, weather:50, time:50, if:54, else:60, for:64, in:66, while:70, loop:74, fn:78, try:88, catch:90, as:112, str:116, bool:116, num:116, import:120, from:122, break:126, continue:130, return:134};
const parser = LRParser.deserialize({
  version: 14,
  states: "3zQYQPOOOOQO'#Cc'#CcO$TQPO'#CfO$[QQO'#CjO$dQSO'#D|OOQO'#Cr'#CrOOQO'#Ct'#CtOOQO'#Cq'#CqO!vQPO'#D[O!vQPO'#D]O(^QSO'#DzOOQO'#D|'#D|OOQO'#Dz'#DzO(hQPO'#DrQYQPOOO!vQPO'#CvO(mQPO'#C{O!vQPO'#DOO(rQPO'#DQO(wQPO'#DSO(rQPO'#DXO)PQPO'#C_O)UQPO'#DiO)ZQPO'#DlOOQO'#Dn'#DnO)eQPO'#DpOOQO,59Q,59QO)oQSO,59QOOQO'#Cm'#CmO)yQPO'#ClOOQO,59U,59UO*OQPO,59UO!vQPO,59ZO*WQSO,59vO*_QSO,59wO!vQPO,59xO!vQPO,59xO!vQPO,59xO!vQPO,59xO!vQPO,59xO!vQPO,59xO!vQPO,59xO$_QQO,59yO!vQPO,59{O,eQPO'#DcOOQO,59|,59|O!vQPO,5:OO,lQPO,5:POOQO,5:^,5:^OOQO-E7p-E7pO,tQSO,59bO,{QPO,59gO,tQSO,59jO-QQPO'#CxOOQO,59l,59lO-XQPO'#DUO(rQPO,59nO(zQPO,59nO-aQPO,59sO-fQPO,58yO-qQPO,5:TO-yQSO,5:WO.TQSO,5:[O._QPO1G.lO.fQPO1G.lOOQO1G.l1G.lO!vQPO,59WO.nQQO1G.pO.vQPO1G.pOOQO1G.p1G.pOOQO1G.u1G.uOOQO1G/b1G/bO1RQSO1G/dO1YQSO1G/dO3ZQSO1G/dO3kQSO1G/dO5xQSO1G/dO6VQSO1G/dO6dQSO1G/dOOQO1G/e1G/eO8jQSO1G/gO8qQSO,59}OOQO,59},59}O8{QSO1G/jOOQO'#Dg'#DgOOQO1G/k1G/kO9iQSO1G.|O!vQPO1G/ROOQO1G/U1G/UOOQO,59d,59dO;rQPO,59dOOQO,59p,59pO;zQPO,59pOOQO1G/Y1G/YO(rQPO1G/YO<SQPO1G/_O!vQPO1G.eO<XQPO1G/oO<^QPO1G/oO<cQSO,5:_OOQO7+$W7+$WO<pQPO7+$WOOQO-E7q-E7qO<wQSO1G.rOOQO,5:`,5:`OOQO7+$[7+$[O=RQQO7+$[OOQO-E7r-E7rOOQO7+%R7+%RO!vQPO'#DsO=ZQPO1G/iOOQO1G/i1G/iO=cQPO7+$hO=kQSO7+$mO=rQPO1G/OO=yQPO1G/OOOQO1G/O1G/OO>RQPO'#DvO>WQPO1G/[OOQO1G/[1G/[OOQO7+$t7+$tO(rQPO7+$yO>`QSO7+$POOQO7+%Z7+%ZO>jQPO7+%ZOOQO<<Gr<<GrOOQO<<Gv<<GvP$_QQO'#DtOOQO7+%T7+%TOOQO<<HS<<HSO!vQPO<<HXOOQO,5:a,5:aOOQO7+$j7+$jO>oQPO7+$jOOQO-E7s-E7sOOQO,5:b,5:bOOQO-E7t-E7tOOQO7+$v7+$vOOQO<<He<<HeO>vQPO<<HuO,tQSOAN=sOOQO<<HU<<HUPYQPO'#DuOOQOAN>aAN>aOOQOG23_G23_",
  stateData: ">{~O!mOSPOS~OSVOTeOUZOWPOXSOZQO_ROdZOgTOiUOk_Op`OsaOubOwcOyWO|dO!^fO!agO!chO!eiO!uXO!vXO!wXO~OSVOUZOWPOXSOZQO_ROdZOgTOiUOk_Op`OsaOubOwcOyWO|dO!uXO!vXO!wXO~O]jO~P!vObnO!qlO~O!spOZ!pXm!pXy!pX!S!pX!Y!pX!o!pX!u!pX!v!pX!x!pX!y!pX!z!pX!{!pX!|!pX!}!pX#O!pX#P!pX#Q!pX#R!pX#S!pX#T!pX#U!pX#V!pX#W!pX#X!pX#Y!pX#Z!pX[!pX]!pXz!pX_!pXb!pX!t!pX~OZ{Oy|O!SzO!Y!PO!o!OO!uwO!vwO!xsO!ytO!zuO!{uO!|vO!}vO#OvO#PvO#QxO#RxO#SxO#TyO#U!OO#V!OO#W!OO#X!OO#Y!OO#Z!OO~Om!nXb!nX~P&mOm!QO~OS!TO~O_!VO~OS!ZOy!XO~OS!]O~OS!^O~Om!`Xb!`X~P!vOm!dXb!dX~P!vO[!aO]!cO~P&mO!r!dO~O[!eOb!gO~Oz!iO~P&mOy|O!SzOZ!Pam!Pa!Y!Pa!o!Pa!u!Pa!v!Pa!x!Pa!y!Pa!z!Pa!{!Pa!|!Pa!}!Pa#O!Pa#P!Pa#Q!Pa#R!Pa#S!Pa#T!Pa#U!Pa#V!Pa#W!Pa#X!Pa#Y!Pa#Z!Pa[!Pa]!Paz!Pa_!Pab!Pa!t!Pa~Oz!tO~P!vOd!vO![!vO~O_!VO~P&mOq!yO~Ob!{O~PYOS#OOz!}O~O}#RO~O!o#SOmRabRa~O!Y#UO!_#TO~Om!`ab!`a~P&mOm!dab!da~P&mO]#WO~P!vO[#XO]#WO~Ob#]O!qlO~O[#^Ob#]O~Oy|O!SzO!Y!PO!uwO!vwO!zuO!{uO!|vO!}vO#OvO#PvO#QxO#RxO#SxO#TyOZ!Qim!Qi!o!Qi!x!Qi#U!Qi#V!Qi#W!Qi#X!Qi#Y!Qi#Z!Qi[!Qi]!Qiz!Qi_!Qib!Qi!t!Qi~O!ytO~P/OO!y!Qi~P/OOy|O!SzO!Y!PO!uwO!vwO#QxO#RxO#SxO#TyOZ!Qim!Qi!o!Qi!x!Qi!y!Qi!z!Qi!{!Qi#U!Qi#V!Qi#W!Qi#X!Qi#Y!Qi#Z!Qi[!Qi]!Qiz!Qi_!Qib!Qi!t!Qi~O!|vO!}vO#OvO#PvO~P1aO!|!Qi!}!Qi#O!Qi#P!Qi~P1aOy|O!SzO!Y!PO#TyOZ!Qim!Qi!o!Qi!u!Qi!v!Qi!x!Qi!y!Qi!z!Qi!{!Qi!|!Qi!}!Qi#O!Qi#P!Qi#U!Qi#V!Qi#W!Qi#X!Qi#Y!Qi#Z!Qi[!Qi]!Qiz!Qi_!Qib!Qi!t!Qi~O#QxO#RxO#SxO~P3{O#Q!Qi#R!Qi#S!Qi~P3{Oy|O!SzO#TyOZ!Qim!Qi!Y!Qi!o!Qi!u!Qi!v!Qi!x!Qi!y!Qi!z!Qi!{!Qi!|!Qi!}!Qi#O!Qi#P!Qi#Q!Qi#R!Qi#S!Qi#U!Qi#V!Qi#W!Qi#X!Qi#Y!Qi#Z!Qi[!Qi]!Qiz!Qi_!Qib!Qi!t!Qi~O]#`O~P&mO[#aOz#cO~P&mOZ!Wim!Wi[!Wi]!Wiz!Wi_!Wib!Wi!t!Wi~P&pOn#dOZjimjiyji!Sji!Yji!oji!uji!vji!xji!yji!zji!{ji!|ji!}ji#Oji#Pji#Qji#Rji#Sji#Tji#Uji#Vji#Wji#Xji#Yji#Zji[ji]jizji_jibji!tji~Ob#hOm#fO~O[#iOz#kO~OS#mO~OS#oO~OS#pO~O[!ga]!gaz!ga~P&mO]#qO~P!vO[`ib`i~P&mOb#rO!qlO~O[#aOz#tO~O_!VOk_O~O!t#vO~P&mOb#xO~PYOb#xOm#yO~OS#{O~O[#iOz#}O~OmRqbRq~P&mO!_$PO~Ob$RO~PYOS$TO~O",
  goto: ")i!qPPP!rPPP!zPP!zPPP!zP#m#uP!zP!z$OP$OP$qP%gPP!zPP!zP!zP!zP&SPP!zPP!z!z!z!zP!z!z&Y!z!zP&sP!rPP!rP!rP!rP&v&|'W'^'dPPP'jP'v][O^!V#f#y$S!aZOQWX^_agipstuvwxy{|!O!V!a!d!y#S#X#a#f#v#y$SQoRV#[!e#^#sWmR!e#^#sR!qz!aVOQWX^_agipstuvwxy{|!O!V!a!d!y#S#X#a#f#v#y$S!`ZOQWX^_agipstuvwxy{|!O!V!a!d!y#S#X#a#f#v#y$SR#u#dQ!WbQ![dQ!x!SQ!z!UQ#P!YQ#l#QQ#u#dQ$O#mR$U$QQ!YcR#Q!Z!P}Ykqr!S!U!_!`!j!k!l!m!n!o!p!r!s!u#V#Z#e#n$QR!w!PQ^OR!R^Q!bkS#Y!b#bR#b!sQ!foR#_!fQ#g!|R#z#gQ#j#OR#|#jS]O^Q!|!VV#w#f#y$S[YO^!V#f#y$SQkQQqWQrXQ!S_Q!UaQ!_gQ!`iQ!hpQ!jsQ!ktQ!luQ!mvQ!nwQ!oxQ!pyQ!r{Q!s|Q!u!OU#V!a#X#aQ#Z!dQ#e!yQ#n#SR$Q#v",
  nodeNames: "âš  Comment Program LetStmt Ident let Number Bool Bool String ListExpr [ , ] ObjExpr { ObjField Property } PairExpr null VariableName BuiltinFunc BuiltinFunc BuiltinVar BuiltinVar IfExpr if Block ; else ForExpr for in WhileExpr while LoopExpr loop FnExpr fn Parameters ( ) TryExpr try catch ParenExpr PrefixExpr InfixExpr MemberExpr . IndexExpr CallExpr Arguments AssignExpr CastExpr as Type Type ImportStmt import from BreakStmt break ContinueStmt continue ReturnStmt return",
  maxTerm: 103,
  skippedNodes: [0,1],
  repeatNodeCount: 5,
  tokenData: "*g~RpXY#VYZ#V]^#Vpq#Vqr#[rs#ist$Yuv$evw$rwx$}xy%iyz%nz{%s{|&b|}&o}!O&t!O!P'R!P!Q'`!Q!['m![!](W!]!^(]!^!_(b!_!`(o!`!a)U!c!})c!}#O)v#P#Q){#R#S)c#T#o)c#o#p*Q#p#q*V#q#r*b~#[O!m~T#aP!wP!_!`#dS#iO!{S~#nTX~Or#irs#}s#O#i#O#P$S#P~#i~$SOX~~$VPO~#i~$_QP~OY$YZ~$Y~$jP#S~!_!`$m~$rO#W~~$uPvw$x~$}O!y~~%STX~Ow$}wx#}x#O$}#O#P%c#P~$}~%fPO~$}~%nOy~~%sOz~~%xQ#Q~z{&O!_!`&]~&TP#T~!_!`&W~&]O#Z~~&bO#U~~&gP!u~!_!`&j~&oO#X~~&tO[~~&yP!v~!_!`&|~'RO#Y~~'WP!S~!O!P'Z~'`O!t~~'eP#R~!_!`'h~'mO#V~~'rQU~!O!P'x!Q!['m~'{P!Q![(O~(TPU~!Q![(O~(]O!r~~(bOm~~(gP!|~!_!`(j~(oO!}~~(tQ!o~!_!`(z!`!a)P~)PO!z~~)UO!s~~)ZP#O~!_!`)^~)cO#P~V)jSST!qQ!Q![)c!c!})c#R#S)c#T#o)c~){OZ~~*QO]~~*VO_~~*YP#p#q*]~*bO!x~~*gOb~",
  tokenizers: [0, 1, 2],
  topRules: {"Program":[0,2]},
  specialized: [{term: 4, get: value => spec_Ident[value] || -1}],
  tokenPrec: 0
});

const HomescriptLanguage = LRLanguage.define({
    parser: parser.configure({
        props: [
            indentNodeProp.add({
                Application: delimitedIndent({ closing: ')', align: false }),
            }),
            foldNodeProp.add({
                Application: foldInside,
            }),
            styleTags({
                'for while loop if else try catch return break continue': tags.controlKeyword,
                in: tags.operatorKeyword,
                'let fn': tags.definitionKeyword,
                'import from': tags.moduleKeyword,
                as: tags.keyword,
                Bool: tags.bool,
                null: tags.null,
                Type: tags.typeName,
                'VariableName/Ident': tags.variableName,
                'CallExpr/VariableName/Ident': tags.function(tags.variableName),
                Property: tags.propertyName,
                'CallExpr/MemberExpr/Property': tags.function(tags.propertyName),
                'FnExpr/Ident': tags.function(tags.variableName),
                'Parameters/Ident': tags.local(tags.variableName),
                Comment: tags.lineComment,
                Number: tags.number,
                String: tags.string,
                '+ - "*" "/" % "**"': tags.arithmeticOperator,
                '|| &&': tags.logicOperator,
                '< <= > >= "!=" ==': tags.compareOperator,
                '=': tags.definitionOperator,
                '( ) { } [ ]': tags.bracket,
                '. , ;': tags.separator,
                BuiltinFunc: tags.standard(tags.function(tags.variableName)),
                BuiltinVar: tags.standard(tags.variableName),
            }),
        ],
    }),
    languageData: {
        commentTokens: { line: '#' },
    },
});
function Homescript() {
    return new LanguageSupport(HomescriptLanguage);
}

export { Homescript, HomescriptLanguage };
