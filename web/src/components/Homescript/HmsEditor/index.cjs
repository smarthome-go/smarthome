'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var language = require('@codemirror/language');
var autocomplete = require('@codemirror/autocomplete');
var highlight = require('@lezer/highlight');
var lr = require('@lezer/lr');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_Ident = {__proto__:null,import:14, type:18, trigger:22, from:32, let:40, return:66, break:70, continue:74, loop:78, while:82, for:86, in:88, true:112, false:112, on:112, off:112, new:118, fn:122, null:128, none:130, exit:140, throw:140, assert:140, print:140, println:140, debug:140, as:204, if:208, else:210, match:214, try:220, catch:222, event:226, pub:230};
const parser = lr.LRParser.deserialize({
  version: 14,
  states: "FpQ]QPOOOqQPO'#EtOOQO'#C`'#C`OOQO'#Ex'#ExQ]QPOOOvQPO'#CaO!UQPO'#CoO!ZQPO'#EpO!`QPO'#EpO!eQPO'#ErO!sQPO,5;`OOQO-E8v-E8vOOQO'#Cd'#CdO!{QPO'#CdO#QQPO'#CdO#VQPO,58{O#[QPO,58{O#gQPO,59ZO#oQPO,5;[O#tQPO,5;[O#yQPO'#C{OOQO,5;^,5;^OOQO'#Ev'#EvO$OQPO1G0zO$TQQO'#EwOOQO'#Cf'#CfOOQO,59O,59OOOQO'#Ch'#ChO$`QPO1G.gO$eQPO1G.gO$mQPO1G.uO%tQSO1G.uO&SQPO'#DlO&[QQO1G0vO#oQPO1G0vO&dQPO,59gO&iQPO7+&fOOQO'#D]'#D]O&tQPO,5;cOOQO'#Cm'#CmO&yQPO7+$RO'OQPO7+$RO'^QPO7+$RO'fQPO7+$RO'kQPO'#DgO)iQWO7+$aO)pQPO'#DcOOQO'#Dc'#DcOOQO'#Ds'#DsOOQO'#Dr'#DrOOQO'#Dv'#DvO$mQPO'#DuO)uQPO'#E`OOQO'#Db'#DbO$mQPO'#DbO+nQPO'#CyOOQO'#Cx'#CxOOQO'#Cw'#CwO+uQPO'#DhO#oQPO'#DjO$mQPO'#EgO$mQPO'#EjO+zQPO'#EmO%tQSO'#FUO,PQWO'#FVOOQO'#Cq'#CqO%tQSO'#CqO,_QPO7+$aOOQO,5:W,5:WO,dQPO,5:WOOQO7+&b7+&bO%tQSO7+&bO,iQQO7+&bO%tQSO1G/ROOQO<<JQ<<JQOOQO'#D^'#D^O,qQPO1G0}OOQO<<Gm<<GmOOQO,5;e,5;eO,vQPO<<GmO,{QPO<<GmOOQO-E8w-E8wO$`QPO<<GmOOQO,5:R,5:RO-ZQWO,5:RO$mQPO,5:[O$mQPO,5:eO$mQPO,5:eO$mQPO,5:eO$mQPO,5:eO$mQPO,5:eO$mQPO,5:eO$mQPO,5:eO$mQPO,5:eO$mQPO,5:eO$mQPO,5:xO$mQPO,5:|O-eQPO,5:}O%tQSO,5;POOQO<<G{<<G{OOQO'#De'#DeOOQO,59},59}O-jQWO,5:aO/vQPO,5:zO/}QWO,59|O0UQWO,59eO2SQWO'#CwO3zQ`O'#DaOOQO'#Cz'#CzOOQO'#E{'#E{O5vQPO,59eOOQO,59e,59eO5}QPO'#C|O6UQPO'#DOO6ZQPO'#DQO+zQPO'#DSO$mQPO'#DUO6`QPO'#DWO6eQPO'#DZO6jQWO,5:SO6xQQO,5:UO7QQWO,5;RO7XQWO,5;UO7`QPO,5;XO7eQPO,5;pO7jQPO'#FYOOQO'#FW'#FWO7oQPO'#FWOOQO,5;q,5;qO7wQPO,5;qOOQO,59],59]O$mQPO<<G{O%tQSO1G/rO+zQPO<<I|OOQO<<I|<<I|O%tQSO<<I|O7|QPO7+$mO8RQPO7+&iO$`QPOAN=XO8YQPOAN=XP#[QPO'#EyO8_QPOAN=XO8dQPO1G/mO8kQPO1G/mOOQO1G/m1G/mO9XQWO1G/vO;TQWO1G0PO=PQWO1G0PO>{QWO1G0PO@wQWO1G0POBsQWO1G0PODoQWO1G0POHtQWO1G0POH{QWO1G0POISQWO1G0POKOQWO1G0dOLzQWO1G0hOOQO1G0i1G0iOOQO1G0k1G0kOMRQWO'#F_OOQO1G0f1G0fOM]QPO1G0fOOQO1G/h1G/hOOQO1G/P1G/POOQO,59{,59{OMbQWO1G/POOQO-E8y-E8yOMiQWO,59hOOQO,59h,59hOOQO,59j,59jOOQO,59l,59lOMpQPO,59nO7QQWO,59pO! jQPO,59rOOQO'#D['#D[O$TQQO,59uO! oQPO'#FaOOQO'#F`'#F`O! tQPO'#F`OOQO1G/n1G/nO! |QPO1G/nOOQO1G/p1G/pO%tQSO1G/pO!$RQWO1G0mO!%mQPO1G0pO!%tQPO1G0sOOQO1G1[1G1[O%tQSO,5;tO!%yQPO,5;rO!&UQPO,5;rOOQO1G1]1G1]O!&^QWOAN=gO!&eQPO7+%^OOQOAN?hAN?hO+zQPOAN?hOOQO<<HX<<HXOOQO<<JT<<JTO!&mQPO<<JTO!&rQPOG22sO$`QPOG22sOOQOG22sG22sO!&wQWO,5;hOOQO7+%X7+%XO!'UQPO7+%XOOQO-E8z-E8zOOQO7+&S7+&SO!']QPO,5;yO!'dQPO,5;yOOQO7+&Q7+&QOOQO7+$k7+$kO'rQWOOOOQO1G/S1G/SOOQO1G/Y1G/YO!'lQPO1G/[O$mQPO1G/^O&tQPO1G/aO!)fQ`O1G0mO$mQPO,5;{O!+RQPO,5;zO!+^QPO,5;zOOQO7+%Y7+%YO+zQPO7+%[O!+fQPO7+&XO!+nQWO'#DrO$mQPO'#DuO!/_QWO'#DbOOQO7+&[7+&[O!/fQPO7+&[O+zQPO7+&_OOQO1G1`1G1`OOQO,5;f,5;fO!/nQPO1G1^OOQO-E8x-E8xOOQOG23RG23RO!/yQPO'#FOO!0OQPO<<HxOOQO<<Hx<<HxOOQOG25SG25SOOQOAN?oAN?oOOQOLD(_LD(_O!0WQPOLD(_OOQO<<Hs<<HsP$mQPO'#E|O!0]QPO1G1eOOQO7+$v7+$vO7QQWO7+$xO!0dQPO7+${O!0iQWO1G1gOOQO,5;i,5;iO!0sQPO1G1fOOQO-E8{-E8{OOQO<<Hv<<HvOOQO<<Is<<IsO$mQPO,5<OO!1OQWO,5<OO!1VQPO<<IvO!1^QPO<<IvOOQO<<Iv<<IvOOQO<<Iy<<IyP!1fQPO'#EzO!1nQPO,5;jOOQO-E8|-E8|OOQOAN>dAN>dOOQO!$'Ky!$'KyO!1sQPO<<HdO!3mQPO<<HgP!3tQPO'#E}O!3|QWO1G1jO!4TQWO1G1jO$mQPO1G1jOOQO,5;k,5;kOOQOAN?bAN?bO!4_QPOAN?bOOQO-E8}-E8}O%tQSO1G1UOOQOAN>OAN>OOOQOAN>RAN>RO!4fQPOAN>ROOQO7+'U7+'UO!4kQWO7+'UO!4rQWO7+'UOOQOG24|G24|P!$fQPO'#FPOOQO7+&p7+&pOOQOG23mG23mOOQO<<Jp<<JpO7QQWO,5;RO$mQPO'#EgO!4|QPO7+&X",
  stateData: "!5X~O#vOSPOSQOS~OVTOdUO!_VO#eWO#gXO#iPO~OgYO~OU[OX]OZ^O]`O~OUaO~OUbO~O!_cO~OXdOdUO!_VO#eWO~OUfOZhO~OUiO~OUkO~O`lO~OU[OX]OZ^O~O#woO#}nO~O!RpO~OUrO~OUsO~OhtO~O$OuO$PuO$QuO~OUwO~O^yO_{O~OU!RO]!XOg|Oi!POj!SO!R!WO!W!OO!]![O!_!]O!b!PO!c!PO!h!QO!k!SO!l!SO#[!^O#_!_O#b!`O~O]!bOf!cOg!aOj!dO~OU!gO!S!fO~O]!XO!a!iO~O#}!kO~O!_VO#eWO#iPO~OU!mO~Ob!oO~OU[OX]OZ^O_!qO~O^!rO_!qO~O`!tO~Oh!uO~P$mOg#SO!e!wO!k!|O!n!xO!o!yO!p!zO!q!{O!r!{O!s!|O!t!}O!u!}O!v!}O!w#OO!x#PO!y#OO!z#QO!{#QO!|#QO!}#QO#O#QO#P#QO#R#RO#W#TO#Y#UO$U#TO$V#TO!R#TX~Ob#VO~P'rO!Y#WO~O!R#ZO~OU!ROXdOZ#jO]!XOdUOg|Oi!POj!SOq#dOs#eOu#fOw#gOy#hO{#iO!R!WO!W!OO!]![O!_!]O!b!PO!c!PO!h!QO!k!SO!l!SO#['ZO#_!_O#b!`O~O_#cO~P)zO]#kO~O]!XO~OU#qO_#tOi#qO#{#rO~O#}#wO~O#w#xO~O]!XO!a#{O~O!R#}O~O`$OO~OU[OX]OZ^O_$PO~O^$SOh$UO~P'rOU$cO~O!w#OO#W#TO$U#TO$V#TOb!iag!ia!R!ia!e!ia!k!ia!n!ia!o!ia!p!ia!q!ia!r!ia!s!ia!t!ia!u!ia!v!ia!x!ia!y!ia!z!ia!{!ia!|!ia!}!ia#O!ia#P!ia#R!ia#Y!ia^!iah!ia!S!ia_!ia]!ia#`!ia~O!S$fO~P$mO!S$hO~P'rO_$iO~P'rOgkX!RkX!ekX!kkX!nkX!okX!pkX!qkX!rkX!skX!tkX!ukX!vkX!wkX!xkX!ykX!zkX!{kX!|kX!}kX#OkX#PkX#RkX#WkX#YkX$UkX$VkX~Ob$jO_kX~P0]O!ekX!nkX!okX!pkX!qkX!rkX!skX!tkX!ukX!vkX!wkX!xkX!ykX!zkX!{kX!|kX!}kX#OkX#PkX#RkX#WkX#YkX$UkX$VkX~Ob$jOU!TXX!TXZ!TX]!TX_!TXd!TXg!TXi!TXj!TXq!TXs!TXu!TXw!TXy!TX{!TX!R!TX!W!TX!]!TX!_!TX!b!TX!c!TX!h!TX!k!TX!l!TX#[!TX#_!TX#b!TX~P2^O_$iO~P)zOb$nO~P$mOb$oO~Ob$pO~OU$sO~OU$tO~OU$vO_$yOi$vO#{$wO~O]!XO!a$|O~O]!XO~P'rO]%OO~P'rO#c%PO~Oh%QO~O#w%RO~O^%SO_#zX~O_%UO~Ob%ZO~O!S%[O~P$mO`%_O~Ob%`O~Oh%bO~P$mO^%cOh%bO~O!w#OO!x#PO!y#OO#W#TO$U#TO$V#TO~Ob!dig!di!R!di!e!di!k!di!n!di!o!di!p!di!q!di!r!di!s!di!t!di!u!di!v!di!z!di!{!di!|!di!}!di#O!di#P!di#R!di#Y!di^!dih!di!S!di_!di]!di#`!di~P8sO!e!wO!k!|O!o!yO!p!zO!q!{O!r!{O!s!|O!t!}O!u!}O!v!}Ob!mig!mi!R!mi!n!mi!z!mi!{!mi!|!mi!}!mi#O!mi#P!mi#R!mi#Y!mi^!mih!mi!S!mi_!mi]!mi#`!mi~P8sO!e!wO!k!|O!p!zO!q!{O!r!{O!s!|O!t!}O!u!}O!v!}Ob!mig!mi!R!mi!n!mi!o!mi!z!mi!{!mi!|!mi!}!mi#O!mi#P!mi#R!mi#Y!mi^!mih!mi!S!mi_!mi]!mi#`!mi~P8sO!e!wO!k!|O!q!{O!r!{O!s!|O!t!}O!u!}O!v!}Ob!mig!mi!R!mi!n!mi!o!mi!p!mi!z!mi!{!mi!|!mi!}!mi#O!mi#P!mi#R!mi#Y!mi^!mih!mi!S!mi_!mi]!mi#`!mi~P8sO!e!wO!k!|O!s!|O!t!}O!u!}O!v!}Ob!mig!mi!R!mi!n!mi!o!mi!p!mi!q!mi!r!mi!z!mi!{!mi!|!mi!}!mi#O!mi#P!mi#R!mi#Y!mi^!mih!mi!S!mi_!mi]!mi#`!mi~P8sO!e!wO!t!}O!u!}O!v!}Ob!mig!mi!R!mi!k!mi!n!mi!o!mi!p!mi!q!mi!r!mi!s!mi!z!mi!{!mi!|!mi!}!mi#O!mi#P!mi#R!mi#Y!mi^!mih!mi!S!mi_!mi]!mi#`!mi~P8sO!e!wOb!mig!mi!R!mi!k!mi!n!mi!o!mi!p!mi!q!mi!r!mi!s!mi!t!mi!u!mi!v!mi!z!mi!{!mi!|!mi!}!mi#O!mi#P!mi#R!mi#Y!mi^!mih!mi!S!mi_!mi]!mi#`!mi~P8sO!w#OO#W#TO$U#TO$V#TOb!mig!mi!R!mi!e!mi!k!mi!n!mi!o!mi!p!mi!q!mi!r!mi!s!mi!t!mi!u!mi!v!mi!x!mi!z!mi!{!mi!|!mi!}!mi#O!mi#P!mi#R!mi#Y!mi^!mih!mi!S!mi_!mi]!mi#`!mi~O!y!mi~PFkO!y#OO~PFkO!e!wO!k!|O!n!xO!o!yO!p!zO!q!{O!r!{O!s!|O!t!}O!u!}O!v!}Ob!mig!mi!R!mi!z!mi!{!mi!|!mi!}!mi#O!mi#P!mi#R!mi#Y!mi^!mih!mi!S!mi_!mi]!mi#`!mi~P8sO!e!wO!k!|O!n!xO!o!yO!p!zO!q!{O!r!{O!s!|O!t!}O!u!}O!v!}O!z#QO!{#QO!|#QO!}#QO#O#QO#P#QO#R#ROb#Qig#Qi!R#Qi#Y#Qi^#Qih#Qi!S#Qi_#Qi]#Qi#`#Qi~P8sOh%eO~P'rO^%fO!S$RX~P'rO!S%hO~O_%iO~P'rOb%kO~P'rOb%lOUvaXvaZva]va_vadvagvaivajvaqvasvauvawvayva{va!Rva!Wva!]va!_va!bva!cva!hva!kva!lva#[va#_va#bva~O|%nO~O#w%qO~O^%rO_$SX~O_%tO~Ob#Zig#Zi!R#Zi!e#Zi!k#Zi!n#Zi!o#Zi!p#Zi!q#Zi!r#Zi!s#Zi!t#Zi!u#Zi!v#Zi!w#Zi!x#Zi!y#Zi!z#Zi!{#Zi!|#Zi!}#Zi#O#Zi#P#Zi#R#Zi#W#Zi#Y#Zi$U#Zi$V#Zi]#Zi_#Zi~O#]%vO^#Zih#Zi!S#Zi#`#Zi~P!!ROU%wO]!XOg|Oi!POj!SO!R!WO!W!OO!]![O!_!]O!b!PO!c!PO!h!QO!k!SO!l!SO#[!^O#_!_O#b!`O~O_%zO~P!$fOU%|O~OU#qOi#qO_#za~O^&PO_#za~Ob&RO~P'rO^&SO!S&UO~O!S&WO~Ob&XO~O^#pah#pa!S#pa~P'rOh&ZO~P$mO!S$Ra~P$mO^&]O!S$Ra~Ob&^OUxiXxiZxi]xi_xidxigxiixijxiqxisxiuxiwxiyxi{xi!Rxi!Wxi!]xi!_xi!bxi!cxi!hxi!kxi!lxi#[xi#_xi#bxi~O#]'[OU#ZiX#ZiZ#Zid#Zii#Zij#Ziq#Zis#Ziu#Ziw#Ziy#Zi{#Zi!W#Zi!]#Zi!_#Zi!b#Zi!c#Zi!h#Zi!l#Zi#[#Zi#_#Zi#b#Zi~P!!ROU$vOi$vO_$Sa~O^&cO_$Sa~O]!XO#[!^O~O#`&gOg!fX!R!fX!e!fX!k!fX!n!fX!o!fX!p!fX!q!fX!r!fX!s!fX!t!fX!u!fX!v!fX!w!fX!x!fX!y!fX!z!fX!{!fX!|!fX!}!fX#O!fX#P!fX#R!fX#W!fX#Y!fX$U!fX$V!fX~Og!UX!R!UX!e!UX!k!UX!n!UX!o!UX!p!UX!q!UX!r!UX!s!UX!t!UX!u!UX!v!UX!w!UX!x!UX!y!UX!z!UX!{!UX!|!UX!}!UX#O!UX#P!UX#R!UX#W!UX#Y!UX$U!UX$V!UX~O#`&gO~P!-hO^&iO_&kO~OU#qOi#qO_#zi~OU&nO~O^&SO!S&pO~Ob&qO~O!S$Ri~P$mO!R&sO~O^$Ti_$Ti~P'rOU$vOi$vO_$Si~O#`&wO~P!-hO_&yO~P!$fO^&zO_&yO~OU#qOi#qO~O#w&|O~Ob&}OUzyXzyZzy]zy_zydzygzyizyjzyqzyszyuzywzyyzy{zy!Rzy!Wzy!]zy!_zy!bzy!czy!hzy!kzy!lzy#[zy#_zy#bzy~O!S'OO~P$mOU$vOi$vO~O^'QO~P0]O^$Wi_$Wi~P0]O_'TO~P!$fO!S'WO~O^'XO~P0]O^$Wq_$Wq~P0]O]!XO#['ZO~OP!u~",
  goto: "7[$XPPPP$Y$^PP$bP$mP$pPPPP$sP%PP%[PPPPP%}(U)X+R%T%WP%WP%WP%WP%WP%WPP%W+V+Y+`PP%W+f,iP-jP-m-mP-mP.jPPP-mP.s/pP.s0mPP.sPPPPPPPPPPPPPPPPPP.sP.s1l.s.sP.sP2iPP3jPP3jPP4gP$^P4qP4x4{5O5U5[5b5h5r5x6OPPPP6U6U6cP6fPPPP6n6w6zPP7STROSTQOSQ_TQm`V!py!r$QRj]Rj^QxlQ$R!tQ%^$OR&Y%_SQOSQeXT#`!X#bQ!eoQ#p!aQ#v!dQ#y!iQ#|!kQ$d#UQ%W#xQ%Y#{Q%u$|Q%}%RR'V&|Q}nQ!v|S#Y!T%xQ#[!WQ#]!XQ#m!^Q#n!_Q$V!wQ$W!xQ$X!yQ$Y!zQ$Z!{Q$[!|Q$]!}Q$^#OQ$_#PQ$`#QQ$a#RQ$b#SU$e#Z#}&sQ$k#bQ$m#dQ$r#hQ%V#wY%a$S%c%f&[&][%j%O&g&i&w&z'UQ&_%nQ&a%qR'Y'Z!l!Zn|!T!W!^!_!w!x!y!z!{!|!}#O#P#Q#R#S#Z#d#h#w#}$S%O%c%f%n%q%x&[&]&i&s&z'U'ZS#_!X#bQ&v&gR'S&w!t!Yn|!T!W!X!^!_!w!x!y!z!{!|!}#O#P#Q#R#S#Z#b#d#h#w#}$S%O%c%f%n%q%x&[&]&g&i&s&w&z'U'ZQ!hqQ#o!`Q#z!jQ$q#gQ${#lQ$}#mQ%X#yQ%m$rQ%p'YQ&V%YQ&e%uS&f%v'[Q&l%|R&r&_T#a!X#bR$u#jQvhR%o$uQ!nvR&`%o!l!Zn|!T!W!^!_!w!x!y!z!{!|!}#O#P#Q#R#S#Z#d#h#w#}$S%O%c%f%n%q%x&[&]&i&s&z'U'ZS#^!X#bQ&u&gR'R&w!j!Vn|!T!W!X!^!_!w!x!y!z!{!|!}#O#P#Q#R#S#Z#b#d#h#w#}$S%c%f%n%q&[&]&g&s&w'ZW%y%O&i&z'UR&h%xR#X!O!u!Pn|!T!W!X!^!_!w!x!y!z!{!|!}#O#P#Q#R#S#Z#b#d#h#w#}$S%O%c%f%n%q%x&[&]&g&i&s&w&z'U'ZQqbQ!jrR#l!]!u!Vn|!T!W!X!^!_!w!x!y!z!{!|!}#O#P#Q#R#S#Z#b#d#h#w#}$S%O%c%f%n%q%x&[&]&g&i&s&w&z'U'Z!u!Rn|!T!W!X!^!_!w!x!y!z!{!|!}#O#P#Q#R#S#Z#b#d#h#w#}$S%O%c%f%n%q%x&[&]&g&i&s&w&z'U'Z!l!Tn|!T!W!X!^!_!w!x!y!z!{!|!}#O#P#Q#R#S#Z#b#d#h#w#}$S%c%f%n%q%x&[&]&g&s&w'ZX%x%O&i&z'U!u!Un|!T!W!X!^!_!w!x!y!z!{!|!}#O#P#Q#R#S#Z#b#d#h#w#}$S%O%c%f%n%q%x&[&]&g&i&s&w&z'U'Z!t!Yn|!T!W!X!^!_!w!x!y!z!{!|!}#O#P#Q#R#S#Z#b#d#h#w#}$S%O%c%f%n%q%x&[&]&g&i&s&w&z'U'ZT&f%v'[!u!Yn|!T!W!X!^!_!w!x!y!z!{!|!}#O#P#Q#R#S#Z#b#d#h#w#}$S%O%c%f%n%q%x&[&]&g&i&s&w&z'U'ZSQOSQeXR!ltSQOSR!ltRgYRfYQSORZSQzmR!szQ%T#sR&Q%TQ#b!XR$l#bQ$T!vS%d$T%gR%g$eQ%s$xR&d%sQ&T%WR&o&TQ&j%{R&{&jg!co!a!d!i!k#U#x#{$|%R&|R#u!bQ#s!bV&O%S&P&mQ$g#ZQ%]#}R'P&sR$z#kQ$x#kV&b%r&c&tQ%{%OV&x&i&z'U",
  nodeNames: "⚠ LineComment BlockComment Program Item ImportItem Ident import ImportItemCanditate type TypeImport trigger TriggerImport { , } from Module ; LetStatement let Type Word [ ] String QuestionMark Expression ExpressionWithBlock Block Statement TypeDefinition ReturnStatement return BreakStatement break ContinueStatement continue LoopStatement loop WhileStatement while ForStatement for in TriggerStatement TriggerTarget TriggerConnective TriggerSource ( ) ExpressionStatement ExpressionWithoutBlock LiteralExpression Number Boolean Boolean ListLiteral ObjectLiteral new FunctionLiteral fn Parameters Arrow null none RangeExpression Range VariableName BuiltinFunc BuiltinFunc PrefixExpression PrefixOp Minus Not InfixExpression BitOr BitXor BitAnd ShiftLeft ShiftRight Plus Multiply Divide Modulo Power LogicalAnd LogicalOr Equal NotEqual LessThan LessThanEqual GreaterThan GreaterThanEqual AssignExpression AssignOp CallExpression CallBase IndexExpression MemberExpression . CastExpression as IfExpression if else MatchExpression match FatArrow TryExpression try catch FunctionDefinition event PubItem pub AnnotatedFunction HashTag Annotation TriggerAnnotation",
  maxTerm: 146,
  skippedNodes: [0,1,2],
  repeatNodeCount: 8,
  tokenData: "2x~RxXY#oYZ#o]^#opq#oqr#trs$Rst%suv%xvw&Vwx&gxy(Syz(Xz{(^{|(q|}(y}!O)O!O!P)b!P!Q)o!Q![+m![!],`!]!^,e!^!_,j!_!`-S!`!a-k!a!b.T!c!}.[!}#O.o#P#Q.t#Q#R.y#R#S.[#T#U/R#U#].[#]#^0R#^#c.[#c#d1R#d#o.[#o#p2R#p#q2W#q#r2h#r#s2m~#tO#v~~#yP!l~!_!`#|~$RO!{~~$WVi~Or$Rrs$ms#O$R#O#P$r#P;'S$R;'S;=`%m<%lO$R~$rOi~~$uRO;'S$R;'S;=`%O;=`O$R~%TWi~Or$Rrs$ms#O$R#O#P$r#P;'S$R;'S;=`%m;=`<%l$R<%lO$R~%pP;=`<%l$R~%xO#i~~%}P!v~!_!`&Qh&VO#Rh~&[Q!p~vw&b!_!`&Q~&gO!x~~&lVi~Ow&gwx$mx#O&g#O#P'R#P;'S&g;'S;=`'|<%lO&g~'URO;'S&g;'S;=`'_;=`O&g~'dWi~Ow&gwx$mx#O&g#O#P'R#P;'S&g;'S;=`'|;=`<%l&g<%lO&g~(PP;=`<%l&g~(XO!R~~(^O!S~~(cQ!t~z{(i!_!`&Q~(nP!w~!_!`&Q~(vP!s~!_!`&Q~)OO^~k)TQ!ki!_!`&Q!`!a)Zj)bO$Uh!aQ~)gP#W~!O!P)j~)oO!e~~)tR!u~z{)}!P!Q+U!_!`&Q~*QTOz)}z{*a{;'S)};'S;=`+O<%lO)}~*dVOz)}z{*a{!P)}!P!Q*y!Q;'S)};'S;=`+O<%lO)}~+OOQ~~+RP;=`<%l)}~+ZSP~OY+UZ;'S+U;'S;=`+g<%lO+U~+jP;=`<%l+U~+rR!W~!O!P+{!Q![+m#Y#Z,Z~,OP!Q![,R~,WP!W~!Q![,R~,`O!W~~,eO#w~~,jOb~~,oQ!|~!^!_,u!_!`,}~,zP!q~!_!`&Q~-SO!}~i-ZQ#}P#Rh!_!`-a!`!a-fh-fO!zhW-kO#`W~-pQ#O~!_!`-v!`!a-{~-{O#P~~.QP!r~!_!`&Qm.[O#{Wjem.cSUifS!Q![.[!c!}.[#R#S.[#T#o.[~.tOg~~.yOh~~/OP!o~!_!`&Qo/YUUifS!Q![.[!c!}.[#R#S.[#T#h.[#h#i/l#i#o.[o/uS$PQUifS!Q![.[!c!}.[#R#S.[#T#o.[o0YUUifS!Q![.[!c!}.[#R#S.[#T#b.[#b#c0l#c#o.[o0uS$QQUifS!Q![.[!c!}.[#R#S.[#T#o.[o1YUUifS!Q![.[!c!}.[#R#S.[#T#b.[#b#c1l#c#o.[o1uS$OQUifS!Q![.[!c!}.[#R#S.[#T#o.[~2WO]~~2]Q!n~!_!`&Q#p#q2c~2hO!y~~2mO_~~2pP!`!a2s~2xO$V~",
  tokenizers: [0, 1, 2, 3, 4],
  topRules: {"Program":[0,3]},
  specialized: [{term: 6, get: (value) => spec_Ident[value] || -1}],
  tokenPrec: 3042
});

const HomescriptLanguage = language.LRLanguage.define({
    parser: parser.configure({
        props: [
            language.indentNodeProp.add({
                Application: language.delimitedIndent({ closing: ')', align: false }),
            }),
            language.foldNodeProp.add({
                Application: language.foldInside,
            }),
            highlight.styleTags({
                'for while loop if else match try catch return break continue': highlight.tags.controlKeyword,
                'in new': highlight.tags.operatorKeyword,
                'let fn type trigger': highlight.tags.definitionKeyword,
                'pub event': highlight.tags.modifier,
                'import from': highlight.tags.moduleKeyword,
                'ImportItem/Module/Ident': highlight.tags.namespace,
                // 'ImportItem/ImportItemCanditate/Ident': t.namespace,
                'ImportItem/ImportItemCanditate/TypeImport/Ident': highlight.tags.typeName,
                'ImportItem/ImportItemCanditate/TriggerImport/Ident': highlight.tags.typeName,
                'TypeDefinition/Ident': highlight.tags.namespace,
                'FunctionDefinition/Ident': highlight.tags.function(highlight.tags.variableName),
                as: highlight.tags.keyword,
                Boolean: highlight.tags.bool,
                null: highlight.tags.null,
                none: highlight.tags.null,
                'CallExpression/CallBase/Expression/ExpressionWithoutBlock/VariableName/Ident': highlight.tags.function(highlight.tags.propertyName),
                'ObjectLiteral/Ident': highlight.tags.propertyName,
                'MemberExpression/Ident': highlight.tags.propertyName,
                'FunctionDefinition/parameterList/Ident': highlight.tags.local(highlight.tags.variableName),
                'ForStatement/Ident': highlight.tags.local(highlight.tags.variableName),
                'TriggerStatement/TriggerTarget/Ident': highlight.tags.function(highlight.tags.variableName),
                'TriggerConnective': highlight.tags.local(highlight.tags.controlKeyword),
                'TriggerSource/Ident': highlight.tags.typeName,
                'Parameters/Ident': highlight.tags.local(highlight.tags.variableName),
                'VariableName/Ident': highlight.tags.variableName,
                'Annotation/Ident': highlight.tags.propertyName,
                LineComment: highlight.tags.lineComment,
                BlockComment: highlight.tags.blockComment,
                Number: highlight.tags.number,
                String: highlight.tags.string,
                'Arrow QuestionMark': highlight.tags.typeOperator,
                'FatArrow': highlight.tags.controlOperator,
                'Plus Minus Multiply Divide Modulo Power': highlight.tags.arithmeticOperator,
                'LogicalOr LogicalAnd': highlight.tags.logicOperator,
                'LessThan LessThanEqual GreaterThan GreaterThanEqual NotEqual Equal': highlight.tags.compareOperator,
                'AssignOp`': highlight.tags.definitionOperator,
                '"(" ")" "{" "}" "[" "]"': highlight.tags.bracket,
                '"." ".." "," ";"': highlight.tags.separator,
                'AnnotatedFunction/HashTag': highlight.tags.local(highlight.tags.variableName),
                BuiltinFunc: highlight.tags.standard(highlight.tags.function(highlight.tags.variableName)),
                'Type/Word': highlight.tags.typeName,
            }),
        ],
    }),
    languageData: {
        commentTokens: { line: '//' },
    },
});
const HomescriptCompletion = HomescriptLanguage.data.of({
    autocomplete: autocomplete.completeFromList([
        { label: 'pub', type: 'keyword' },
        { label: 'new', type: 'keyword' },
        { label: 'fn', type: 'keyword' },
        { label: 'let', type: 'keyword' },
        { label: 'return', type: 'keyword' },
        { label: 'break', type: 'keyword' },
        { label: 'continue', type: 'keyword' },
        { label: 'if', type: 'keyword' },
        { label: 'else', type: 'keyword' },
        { label: 'match', type: 'keyword' },
        { label: 'loop', type: 'keyword' },
        { label: 'while', type: 'keyword' },
        { label: 'for', type: 'keyword' },
    ]),
});
function Homescript() {
    return new language.LanguageSupport(HomescriptLanguage, [HomescriptCompletion]);
}

exports.Homescript = Homescript;
exports.HomescriptCompletion = HomescriptCompletion;
exports.HomescriptLanguage = HomescriptLanguage;
