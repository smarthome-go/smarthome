'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var lr = require('@lezer/lr');
var language = require('@codemirror/language');
var highlight = require('@lezer/highlight');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = lr.LRParser.deserialize({
  version: 14,
  states: "nQYQPOOOOQO'#Cg'#CgOOQO'#Cc'#CcQYQPOOOOQO-E6a-E6a",
  stateData: "h~OYOSPOS~ORPOSPOTPOUPO~O",
  goto: "g[PPPPPPP]PPPcQRORSRTQOR",
  nodeNames: "âš  LineComment Program Boolean Identifier String Number",
  maxTerm: 11,
  skippedNodes: [0,1],
  repeatNodeCount: 1,
  tokenData: ")Q~RaXY!WYZ!W]^!Wpq!Wrs!ist#Wwx#c!Q![#{#Y#Z$f#Z#[%T#[#]%f#`#a%x#b#c&U#c#d&t#d#e'T#g#h'g#h#i(t~!]SY~XY!WYZ!W]^!Wpq!W~!lTOr!irs!{s#O!i#O#P#Q#P~!i~#QOT~~#TPO~!i~#]QP~OY#WZ~#W~#fTOw#cwx!{x#O#c#O#P#u#P~#c~#xPO~#c~$QQU~!O!P$W!Q![#{~$ZP!Q![$^~$cPU~!Q![$^~$iP#T#U$l~$oP#`#a$r~$uP#g#h$x~${P#X#Y%O~%TOR~~%WP#X#Y%Z~%^P#h#i%a~%fOS~~%iP#h#i%l~%oP#h#i%r~%uP#d#e%a~%{P#c#d&O~&RP#Z#[%a~&XP#c#d&[~&_P#h#i&b~&eP#]#^&h~&kP#Y#Z&n~&qP#m#n%a~&wQ#Y#Z&}#b#c%O~'QP#Y#Z%O~'WP#f#g'Z~'^P#]#^'a~'dP#b#c%Z~'jQ#`#a'p#k#l'|~'sP#X#Y'v~'yP#X#Y%r~(PP#]#^(S~(VP#h#i(Y~(]P#V#W(`~(cP#[#](f~(kPS~!q!r(n~(qP#b#c%a~(wP#f#g(z~(}P#i#j$x",
  tokenizers: [0],
  topRules: {"Program":[0,2]},
  tokenPrec: 0
});

const HomescriptLanguage = language.LRLanguage.define({
    parser: parser.configure({
        props: [
            highlight.styleTags({
                Identifier: highlight.tags.keyword,
                Boolean: highlight.tags.bool,
                String: highlight.tags.string,
                Number: highlight.tags.integer,
                LineComment: highlight.tags.lineComment,
                "( )": highlight.tags.paren
            }),
            language.indentNodeProp.add({
                Application: context => context.column(context.node.from) + context.unit
            }),
            language.foldNodeProp.add({
                Application: language.foldInside
            })
        ]
    }),
    languageData: {
        commentTokens: { line: "#" }
    }
});
function Homescript() {
    return new language.LanguageSupport(HomescriptLanguage);
}

exports.Homescript = Homescript;
exports.HomescriptLanguage = HomescriptLanguage;
